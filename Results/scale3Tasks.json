{
  "task_instances": [
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.115907,
      "end_date": "2024-12-23T20:09:17.683281+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13120,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 33,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:16.835910+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table config; INSERT INTO config (key_name, value_text) VALUES ('base_path', '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus');"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:17.567374+00:00",
      "state": "success",
      "task_display_name": "set_path",
      "task_id": "set_path",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.336253,
      "end_date": "2024-12-23T20:09:13.772338+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13062,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 36,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:12.686831+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "Truncated. You can change this behaviour in [core]max_templated_field_length. 'drop table if exists dimaccount;\\ncreate table dimaccount(\\n\\tsk_accountid numeric(11) not null check(sk_accountid >= 0),\\n\\taccountid numeric(11) not null check(accountid >= 0),\\n\\tsk_brokerid numeric(11) not null check(sk_brokerid >= 0),\\n\\tsk_customerid numeric(11) not null check(sk_customerid >= 0),\\n\\tstatus char(10) not null,\\n\\taccountdesc char(50),\\n\\ttaxstatus numeric(1) check(taxstatus in(0, 1, 2)),\\n\\tiscurrent boolean not null,\\n\\tbatchid numeric(5) not null check(batchid >= 0),\\n\\teffectivedate date not null,\\n\\tenddate date not null\\n);\\n\\ndrop table if exists dimbroker;\\ncreate table dimbroker(\\n\\tsk_brokerid numeric(11) not null check(sk_brokerid >= 0),\\n\\tbrokerid numeric(11) not null check(brokerid >= 0),\\n\\tmanagerid numeric(11) check(managerid >= 0),\\n\\tfirstname char(50) not null,\\n\\tlastname char(50) not null,\\n\\tmiddleinitial char(1),\\n\\tbranch char(50),\\n\\toffice char(50),\\n\\tphone char(14),\\n\\tiscurrent boolean not null,\\n\\tbatchid numeric(5) not null check(batchid >= 0),\\n\\teffectivedate date not null,\\n\\tenddate date not null\\n);\\n\\ndrop table if exists dimcompany;\\ncreate table dimcompany(\\n\\tsk_companyid numeric(11) not null check(sk_companyid >= 0),\\n\\tcompanyid numeric(11) not null check(companyid >= 0),\\n\\tstatus char(10) not null,\\n\\tname char(60) not null,\\n\\tindustry char(50) not null,\\n\\tsprating char(4),\\n\\tislowgrade boolean,\\n\\tceo char(100) not null,\\n\\taddressline1 char(80),\\n\\taddressline2 char(80),\\n\\tpostalcode char(12) not null,\\n\\tcity char(25) not null,\\n\\tstateprov char(20) not null,\\n\\tcountry char(24),\\n\\tdescription char(150) not null,\\n\\tfoundingdate date,\\n\\tiscurrent boolean not null,\\n\\tbatchid numeric(5) not null check(batchid >= 0),\\n\\teffectivedate date not null,\\n\\tenddate date not null\\n);\\n\\ndrop table if exists dimcustomer;\\ncreate table dimcustomer(\\n\\tsk_customerid numeric(11) not null check(sk_customerid >= 0),\\n\\tcustomerid numeric(11) not null check(customerid >= 0),\\n\\ttaxid char(20) not null,\\n\\tstatus char(10) not null,\\n\\tlastname char(30) not null,\\n\\tfirstname char(30) not null,\\n\\tmiddleinitial char(1),\\n\\tgender char(1),\\n\\ttier numeric(1) check(tier >= 0),\\n\\tdob date not null,\\n\\taddressline1 char(80) not null,\\n\\taddressline2 char(80),\\n\\tpostalcode char(12) not null,\\n\\tcity char(25) not null,\\n\\tstateprov char(20) not null,\\n\\tcountry char(24),\\n\\tphone1 char(30),\\n\\tphone2 char(30),\\n\\tphone3 char(30),\\n\\temail1 char(50),\\n\\temail2 char(50),\\n\\tnationaltaxratedesc char(50),\\n\\tnationaltaxrate numeric(6,5) check(nationaltaxrate >= 0),\\n\\tlocaltaxratedesc char(50),\\n\\tlocaltaxrate numeric(6,5) check(localtaxrate >= 0),\\n\\tagencyid char(30),\\n\\tcreditrating numeric(5) check(creditrating >= 0),\\n\\tnetworth numeric(10),\\n\\tmarketingnameplate char(100),\\n\\tiscurrent boolean not null,\\n\\tbatchid numeric(5) not null check(batchid >= 0),\\n\\teffectivedate date not null,\\n\\tenddate date not null\\n);\\n\\ndrop table if exists dimdate;\\ncreate table dimdate(\\n\\tsk_dateid numeric(11) not null check(sk_dateid >= 0),\\n\\tdatevalue date not null,\\n\\tdatedesc char(20) not null,\\n\\tcalendaryearid numeric(4) not null check(calendaryearid >= 0),\\n\\tcalendaryeardesc char(20) not null,\\n\\tcalendarqtrid numeric(5) not null check(calendarqtrid >= 0),\\n\\tcalendarqtrdesc char(20) not null,\\n\\tcalendarmonthid numeric(6) not null check(calendarmonthid >= 0),\\n\\tcalendarmonthdesc char(20) not null,\\t\\n\\tcalendarweekid numeric(6) not null check(calendarweekid >= 0),\\n\\tcalendarweekdesc char(20) not null,\\t\\n\\tdayofweeknum numeric(1) not null check(dayofweeknum >= 0),\\n\\tdayofweekdesc char(10) not null,\\t\\n\\tfiscalyearid numeric(4) not null check(fiscalyearid >= 0),\\n\\tfiscalyeardesc char(20) not null,\\t\\n\\tfiscalqtrid numeric(5) not null check(fiscalqtrid >= 0),\\n\\tfiscalqtrdesc char(20) not null,\\t\\n\\tholidayflag boolean\\n);\\n\\ndrop table if exists dimsecurity;\\ncreate table dimsecurity(\\n\\tsk_securityid numeric(11) not null check(sk_securityid >= 0),\\n\\tsymbol char(15) not null,\\n\\tissue char(6) not null,\\n\\tstatus char(10) not null,\\n\\tname char(70) not null,\\n\\texchangeid char(6) not null,\\n\\tsk_companyid numeric(11) not null check(sk_companyid >= 0),\\n\\tsharesoutstanding numeric(12) not null check(sharesoutstanding >= 0'... "
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:13.436085+00:00",
      "state": "success",
      "task_display_name": "create_schema",
      "task_id": "create_schema",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.276732,
      "end_date": "2024-12-23T20:09:16.031105+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13082,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 34,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:15.021956+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "SELECT create_reference_table('dimaccount');\nSELECT create_reference_table('dimbroker');\nSELECT create_reference_table('dimcompany');\nSELECT create_reference_table('dimcustomer');\nSELECT create_reference_table('dimdate');\nSELECT create_reference_table('dimsecurity');\nSELECT create_reference_table('dimtime');\nSELECT create_reference_table('dimessages');\nSELECT create_reference_table('industry');\nSELECT create_reference_table('financial');\nSELECT create_reference_table('statustype');\nSELECT create_reference_table('taxrate');\nSELECT create_reference_table('tradetype');\nSELECT create_reference_table('audit');\nSELECT create_reference_table('config');\n\nSELECT create_distributed_table('factcashbalances','sk_accountid');\nSELECT create_distributed_table('dimtrade','tradeid');\nSELECT create_distributed_table('factholdings','currenttradeid');\nSELECT create_distributed_table('factmarkethistory','sk_securityid');\nSELECT create_distributed_table('prospect','agencyid');\nSELECT create_distributed_table('factwatches','sk_customerid');"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:15.754373+00:00",
      "state": "success",
      "task_display_name": "set_dist_ref_schema",
      "task_id": "set_dist_ref_schema",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.156254,
      "end_date": "2024-12-23T20:09:14.818210+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13076,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 35,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:13.939125+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "Truncated. You can change this behaviour in [core]max_templated_field_length. \"drop table if exists hr;\\ncreate table hr(\\n\\temployeeid numeric(11) not null check(employeeid >= 0),\\n\\tmanagerid numeric(11) not null check(managerid >= 0),\\n\\temployeefirstname char(30) not null,\\n\\temployeelastname char(30) not null,\\n\\temployeemi char(1),\\n\\temployeejobcode numeric(3) check(employeejobcode >= 0),\\n\\temployeebranch char(30),\\n\\temployeeoffice char(10),\\n\\temployeephone char(14)\\t\\n);\\n\\ndrop table if exists batchdate;\\ncreate table batchdate(\\n\\tbatchdate date not null\\t\\n);\\n\\ndrop table if exists finwire_cmp;\\ncreate table finwire_cmp(\\n\\tpts char(15) check(length(pts) > 0),\\n\\trectype char(3) check(length(rectype) > 0),\\n\\tcompanyname char(60) check(length(companyname) > 0),\\n\\tcik char(10) check(length(cik) > 0),\\n\\tstatus char(4) check(length(status) > 0),\\n\\tindustryid char(2) check(length(industryid) > 0),\\n\\tsprating char(4) check(length(sprating) > 0),\\n\\tfoundingdate char(8),\\n\\taddrline1 char(80) check(length(addrline1) > 0),\\n\\taddrline2 char(80),\\n\\tpostalcode char(12) check(length(postalcode) > 0),\\n\\tcity char(25) check(length(city) > 0),\\n\\tstateprovince char(20) check(length(stateprovince) > 0),\\n\\tcountry char(24),\\n\\tceoname char(46) check(length(ceoname) > 0),\\n\\tdescription char(150) check(length(description) > 0)\\n);\\n\\ndrop table if exists finwire_sec;\\ncreate table finwire_sec(\\n\\tpts char(15) check(length(pts) > 0),\\n\\trectype char(3) check(length(rectype) > 0),\\n\\tsymbol char(15) check(length(symbol) > 0),\\n\\tissuetype char(6) check(length(issuetype) > 0),\\n\\tstatus char(4) check(length(status) > 0),\\n\\tname char(70) check(length(name) > 0),\\n\\texid char(6) check(length(exid) > 0),\\n\\tshout char(13) check(length(shout) > 0),\\n\\tfirsttradedate char(8) check(length(firsttradedate) > 0),\\n\\tfirsttradeexchg char(8) check(length(firsttradeexchg) > 0),\\n\\tdividend char(12) check(length(dividend) > 0),\\n\\tconameorcik char(60) check(length(conameorcik) > 0)\\n);\\n\\ndrop table if exists finwire_fin;\\ncreate table finwire_fin(\\n\\tpts char(15) check(length(pts) > 0),\\n\\trectype char(3) check(length(rectype) > 0),\\n\\tyear char(4) check(length(year) > 0),\\n\\tquarter char(1) check(length(quarter) > 0),\\n\\tqtrstartdate char(8) check(length(qtrstartdate) > 0),\\n\\tpostingdate char(8) check(length(postingdate) > 0),\\n\\trevenue char(17) check(length(revenue) > 0),\\n\\tearnings char(17) check(length(earnings) > 0),\\n\\teps char(12) check(length(eps) > 0),\\n\\tdilutedeps char(12) check(length(dilutedeps) > 0),\\n\\tmargin char(12) check(length(margin) > 0),\\n\\tinventory char(17) check(length(inventory) > 0),\\n\\tassets char(17) check(length(assets) > 0),\\n\\tliability char(17) check(length(liability) > 0),\\n\\tshout char(13) check(length(shout) > 0),\\n\\tdilutedshout char(13) check(length(dilutedshout) > 0),\\n\\tconameorcik char(60) check(length(conameorcik) > 0)\\n);\\n\\n\\ndrop table if exists prospect_temp;\\ncreate table prospect_temp(\\n\\tagencyid char(30) not null,\\n\\tlastname char(30) not null,\\n\\tfirstname char(30) not null,\\n\\tmiddleinitial char(1),\\n\\tgender char(1),\\n\\taddressline1 char(80),\\n\\taddressline2 char(80),\\n\\tpostalcode char(12),\\n\\tcity char(25) not null,\\n\\tstate char(20) not null,\\n\\tcountry char(24),\\n\\tphone char(30),\\n\\tincome numeric(9) check(income >= 0),\\n\\tnumbercars numeric(2) check(numbercars >= 0),\\n\\tnumberchildren numeric(2) check(numberchildren >= 0),\\n\\tmaritalstatus char(1),\\n\\tage numeric(3) check(age >= 0),\\n\\tcreditrating numeric(4) check(creditrating >= 0),\\n\\townorrentflag char(1),\\n\\temployer char(30),\\n\\tnumbercreditcards numeric(2) check(numbercreditcards >= 0),\\n\\tnetworth numeric(12) check(networth >= 0)\\t\\n);\\n\\n\\ndrop table if exists customermgmt;\\ncreate table customermgmt(\\n\\t--action element\\n\\tactiontype char(9) check(actiontype in ('NEW','ADDACCT','UPDCUST','UPDACCT','CLOSEACCT','INACT')),\\n\\tactionts varchar check(length(actionts) > 0),\\n\\t--action.customer element\\n\\tc_id numeric(11) not null check(c_id >= 0),\\n\\tc_tax_id char(20) check((actiontype = 'NEW' and length(c_tax_id) > 0) or (actiontype != 'NEW')),\\n\\tc_gndr char(1) check(length(c_gndr) > 0),\\n\\tc_tier numeric(1) check(c_tier >= 0),\\n\\tc_dob date check((actiontype = 'NEW' and c_dob is not null) or (actiontype != '\"... "
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:14.661956+00:00",
      "state": "success",
      "task_display_name": "create_temp_schema",
      "task_id": "create_temp_schema",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.099642,
      "end_date": "2024-12-23T20:09:19.795345+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13132,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 31,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:18.970201+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table batchdate; COPY batchdate FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/BatchDate.txt';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:19.695703+00:00",
      "state": "success",
      "task_display_name": "load_BatchDate",
      "task_id": "load_BatchDate",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.203438,
      "end_date": "2024-12-23T20:09:20.910955+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13136,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 30,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:19.960127+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table dimdate; COPY dimdate FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/Date.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:20.707517+00:00",
      "state": "success",
      "task_display_name": "load_dimDate",
      "task_id": "load_dimDate",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.116727,
      "end_date": "2024-12-23T20:09:22.596023+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13144,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 29,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:21.752794+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table taxrate; COPY taxrate FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/TaxRate.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:22.479296+00:00",
      "state": "success",
      "task_display_name": "load_taxRate",
      "task_id": "load_taxRate",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.115017,
      "end_date": "2024-12-23T20:09:24.277111+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13152,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 28,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:23.424067+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table statustype; COPY statustype FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/StatusType.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:24.162094+00:00",
      "state": "success",
      "task_display_name": "load_statusType",
      "task_id": "load_statusType",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.11455,
      "end_date": "2024-12-23T20:09:25.951648+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13160,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 27,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:25.114357+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table industry; COPY industry FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/Industry.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:25.837098+00:00",
      "state": "success",
      "task_display_name": "load_Industry",
      "task_id": "load_Industry",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.115584,
      "end_date": "2024-12-23T20:09:27.017734+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13166,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 26,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:26.152966+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table tradetype; COPY tradetype FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/TradeType.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:26.902150+00:00",
      "state": "success",
      "task_display_name": "load_tradetype",
      "task_id": "load_tradetype",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.262668,
      "end_date": "2024-12-23T20:09:28.199698+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13172,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 25,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:27.214679+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table dimtime; COPY dimtime FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/Time.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:27.937030+00:00",
      "state": "success",
      "task_display_name": "load_dimTime",
      "task_id": "load_dimTime",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.14459,
      "end_date": "2024-12-23T20:09:29.264855+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13179,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 24,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:28.382468+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table hr;\n\nDO $$ \nDECLARE\n    base_path TEXT;\nBEGIN\n    -- Retrieve the base path from the config table\n    SELECT value_text INTO base_path\n    FROM config\n    WHERE key_name = 'base_path';\n\n    -- Use dynamic SQL to execute the COPY command with the file path\n    EXECUTE format('COPY hr FROM %L DELIMITER '','' CSV;', base_path || '/data/Batch1/HR.csv');\n\nEND $$;\n\n\ntruncate table dimbroker;\ninsert into dimbroker\n\tselect \n\trow_number() over(order by employeeid) as sk_brokerid,\n\temployeeid as brokerid,\n\tmanagerid,\n\temployeefirstname as firstname,\n\temployeelastname as lastname,\n\temployeemi as middleinitial,\n\temployeebranch as branch,\n\temployeeoffice as office,\n\temployeephone as phone,\n\ttrue as iscurrent,\n\t1 as batchid,\n\t(select min(datevalue) FROM dimdate) as effectivedate,\n\t'9999-12-31'::date as enddate\n\tfrom hr\n\twhere employeejobcode = 314;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:29.120265+00:00",
      "state": "success",
      "task_display_name": "load_dimBroker",
      "task_id": "load_dimBroker",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.787304,
      "end_date": "2024-12-23T20:09:30.990195+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PythonOperator",
      "pid": 13185,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 23,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:29.439193+00:00",
      "rendered_fields": {
        "op_args": [],
        "op_kwargs": {},
        "templates_dict": null
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:30.202891+00:00",
      "state": "success",
      "task_display_name": "Parse_Finwire",
      "task_id": "Parse_Finwire",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.147255,
      "end_date": "2024-12-23T20:09:32.151456+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13188,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 22,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:31.214259+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table finwire_cmp;\n\nDO $$ \nDECLARE\n    base_path TEXT;\nBEGIN\n    -- Retrieve the base path from the config table\n    SELECT value_text INTO base_path\n    FROM config\n    WHERE key_name = 'base_path';\n\n    -- Use dynamic SQL to execute the COPY command with the file path\n    EXECUTE format('COPY finwire_cmp FROM %L DELIMITER '','' CSV;', base_path || '/finwire_cmp.csv');\n\nEND $$;\n\n\n\n-- dimcompany\ntruncate table dimcompany;\ninsert into dimcompany\n\tselect \n\trow_number() over(order by cik) as sk_companyid,\n\tcik::numeric(11) as companyid, \n\tst.st_name as status,\n\tcompanyname as name, \n\tind.in_name as industry,\n\tCASE \n        WHEN fin_cmp.sprating not in ('AAA','AA','AA+','AA-','A','A+','A-','BBB','BBB+','BBB-','BB','BB+','BB-','B','B+','B-','CCC','CCC+','CCC-','CC','C','D') \n\t\tTHEN null\n\t\tELSE fin_cmp.sprating\n    END as sprating, \n\tCASE \n        WHEN fin_cmp.sprating not in ('AAA','AA','AA+','AA-','A','A+','A-','BBB','BBB+','BBB-','BB','BB+','BB-','B','B+','B-','CCC','CCC+','CCC-','CC','C','D')\n\t\tTHEN null\n\t\tWHEN fin_cmp.sprating like 'A%' or fin_cmp.sprating like 'BBB%' \n\t\tTHEN false\n\t\tELSE true \n    END as islowgrade,\n\tceoname as ceo,\n\taddrline1 as addressline1,\n\taddrline2 as addressline2,\n\tpostalcode, \n\tcity, \n\tstateprovince as stateprov,\n\tcountry, \n\tdescription, \n\tfoundingdate::date,\n    CASE \n        WHEN ROW_NUMBER() OVER (PARTITION BY cik ORDER BY pts DESC) = 1 \n        THEN TRUE \n        ELSE FALSE \n    END AS iscurrent,\n\t1 as batchid,\n\tleft(fin_cmp.pts, 8)::date as effectivedate,\n\t'9999-12-31'::date as enddate \n\tfrom \n\t\tfinwire_cmp fin_cmp left join statustype st on fin_cmp.status = st.st_id\n        left join industry ind on fin_cmp.industryid = ind.in_id; \n\n-- Alerts for dimcompany\ninsert into dimessages\n\tselect \n\tnow(),\n\t1 as batchid,\n\t'DimCompany' as messagesource,\n\t'Invalid SPRating' as messagetext,\n\t'Alert' as messagetype,\n\t('CO_ID = ' || cik::varchar || ', CO_SP_RATE = ' || sprating::varchar) as messagedata\n\tfrom finwire_cmp\n\twhere sprating not in ('AAA','AA','AA+','AA-','A','A+','A-','BBB','BBB+','BBB-','BB','BB+','BB-','B','B+','B-','CCC','CCC+','CCC-','CC','C','D');"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:32.004201+00:00",
      "state": "success",
      "task_display_name": "load_dimCompany",
      "task_id": "load_dimCompany",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 33.067195,
      "end_date": "2024-12-23T20:10:06.144923+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13195,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 21,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:32.329404+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table finwire_fin;\n\nDO $$ \nDECLARE\n    base_path TEXT;\nBEGIN\n    -- Retrieve the base path from the config table\n    SELECT value_text INTO base_path\n    FROM config\n    WHERE key_name = 'base_path';\n\n    -- Use dynamic SQL to execute the COPY command with the file path\n    EXECUTE format('COPY finwire_fin FROM %L DELIMITER '','' CSV;', base_path || '/finwire_fin.csv');\n\nEND $$;\n\n\ntruncate table financial;\ninsert into financial \n\tselect \n\t\tcmp.sk_companyid as sk_companyid,\n\t\tyear::numeric(4) as fi_year,\n\t\tquarter::numeric(1) as fi_qtr,\n\t\tqtrstartdate::date as fi_qtr_start_date,\n\t\trevenue::numeric(15,2) as fi_revenue,\n\t\tearnings::numeric(15,2) as fi_net_earn,\n\t\teps::numeric(10,2) as fi_basic_eps,\n\t\tdilutedeps::numeric(10,2) as fi_dilut_eps,\n\t\tmargin::numeric(10,2) as fi_margin,\n\t\tinventory::numeric(15,2) as fi_inventory,\n\t\tassets::numeric(15,2) as fi_assets,\n\t\tliability::numeric(15,2) as fi_liability,\n\t\tshout::numeric(12) as fi_out_basic,\n\t\tdilutedshout::numeric(12) as fi_out_dilut\n\tfrom finwire_fin fin_fin, dimcompany cmp\n\twhere ((fin_fin.conameorcik = cmp.name) or (fin_fin.conameorcik = cmp.companyid::varchar))\n\tand left(fin_fin.pts, 8)::date >= cmp.effectivedate\n\tand left(fin_fin.pts, 8)::date < cmp.enddate;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:33.077728+00:00",
      "state": "success",
      "task_display_name": "load_Financial",
      "task_id": "load_Financial",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.359339,
      "end_date": "2024-12-23T20:10:08.237413+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13212,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 20,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:07.133630+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table prospect_temp;\n\nDO $$ \nDECLARE\n    base_path TEXT;\nBEGIN\n    -- Retrieve the base path from the config table\n    SELECT value_text INTO base_path\n    FROM config\n    WHERE key_name = 'base_path';\n\n    -- Use dynamic SQL to execute the COPY command with the file path\n    EXECUTE format('COPY prospect_temp FROM %L DELIMITER '','' CSV;', base_path || '/data/Batch1/Prospect.csv');\n\nEND $$;\n\ntruncate table prospect;\ninsert into prospect\n\twith date_record_id as (\n\t\tselect\n\t\tdd.sk_dateid\n\t\tfrom dimdate dd\n\t\tinner join batchdate bd\n\t\t\ton dd.datevalue = bd.batchdate\n\t)\n\n\tselect\n\t  p.agencyid\n\t, dri.sk_dateid\n\t, dri.sk_dateid\n\t, 1\n\t, false \n\t, p.lastname\n\t, p.firstname\n\t, p.middleinitial\n\t, p.gender\n\t, p.addressline1\n\t, p.addressline2\n\t, p.postalcode\n\t, p.city\n\t, p.state\n\t, p.country\n\t, p.phone\n\t, p.income\n\t, p.numbercars\n\t, p.numberchildren\n\t, p.maritalstatus\n\t, p.age\n\t, p.creditrating\n\t, p.ownorrentflag\n\t, p.employer\n\t, p.numbercreditcards\n\t, p.networth\n\t, nullif(btrim(btrim(btrim(btrim(btrim(\n\t  case\n\t\twhen p.networth > 1000000 or p.income > 200000\n\t\tthen 'HighValue'\n\t\telse ''\n\t  end\n\t  || '+' ||\n\t  case\n\t\twhen p.numberchildren > 3 or p.numbercreditcards > 5\n\t\tthen 'Expenses'\n\t\telse ''\n\t  end\n\t  , '+')\n\t  || '+' ||\n\t  case\n\t\twhen p.age > 45\n\t\tthen 'Boomer'\n\t\telse ''\n\t  end\n\t  , '+')\n\t  || '+' ||\n\t  case\n\t\twhen p.income < 50000 or p.creditrating < 600 or p.networth < 100000\n\t\tthen 'MoneyAlert'\n\t\telse ''\n\t  end\n\t  , '+')\n\t  || '+' ||\n\t  case\n\t\twhen p.numbercars > 3 or p.numbercreditcards > 7\n\t\tthen 'Spender'\n\t\telse ''\n\t  end\n\t  , '+')\n\t  || '+' ||\n\t  case\n\t\twhen p.age < 25 and p.networth > 1000000\n\t\tthen 'Inherited'\n\t\telse ''\n\t  end\n\t  , '+'), '')\n\tfrom prospect_temp p\n\tcross join date_record_id dri;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:07.878074+00:00",
      "state": "success",
      "task_display_name": "load_prospect",
      "task_id": "load_prospect",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 19.537784,
      "end_date": "2024-12-23T20:10:29.355754+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PythonOperator",
      "pid": 13220,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 19,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:09.075861+00:00",
      "rendered_fields": {
        "op_args": [],
        "op_kwargs": {},
        "templates_dict": null
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:09.817970+00:00",
      "state": "success",
      "task_display_name": "cnvrt_customermgmt",
      "task_id": "cnvrt_customermgmt",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.128159,
      "end_date": "2024-12-23T20:10:31.078238+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13227,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 18,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:30.205504+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "COPY customermgmt FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/CustomerMgmt.csv' DELIMITER ',' CSV HEADER;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:30.950079+00:00",
      "state": "success",
      "task_display_name": "load_customermgmt",
      "task_id": "load_customermgmt",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.478001,
      "end_date": "2024-12-23T20:10:33.135684+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13233,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 17,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:31.911835+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "Truncated. You can change this behaviour in [core]max_templated_field_length. \"truncate table dimcustomer;\\ninsert into dimcustomer\\n\\twith customer as (\\n\\t\\tselect\\n\\t\\t  row_number() over(order by cm.c_id) as sk\\n\\t\\t, cm.c_id\\n\\t\\t, cm.c_tax_id\\n\\t\\t, case\\n\\t\\t\\twhen cm.actiontype = 'INACT' then 'INACTIVE'\\n\\t\\t\\telse 'ACTIVE'\\n\\t\\t  end as status\\n\\t\\t, cm.c_l_name\\n\\t\\t, cm.c_f_name\\n\\t\\t, cm.c_m_name\\n\\t\\t, case\\n\\t\\t\\twhen upper(cm.c_gndr) = 'M' or upper(cm.c_gndr) = 'F'\\n\\t\\t\\tthen upper(cm.c_gndr)\\n\\t\\t\\telse 'U'\\n\\t\\t  end as gender\\n\\t\\t, cm.c_tier\\n\\t\\t, cm.c_dob\\n\\t\\t, cm.c_adline1\\n\\t\\t, cm.c_adline2\\n\\t\\t, cm.c_zipcode\\n\\t\\t, cm.c_city\\n\\t\\t, cm.c_state_prov\\n\\t\\t, cm.c_ctry\\n\\t\\t, case\\n\\t\\t\\twhen cm.c_p_1_ctry_code is not null and cm.c_p_1_area_code is not null and cm.c_p_1_local is not null\\n\\t\\t\\tthen '+' || cm.c_p_1_ctry_code || ' (' || cm.c_p_1_area_code || ') ' || cm.c_p_1_local || coalesce(cm.c_p_1_ext, '')\\n\\n\\t\\t\\twhen cm.c_p_1_ctry_code is null and cm.c_p_1_area_code is not null and cm.c_p_1_local is not null\\n\\t\\t\\tthen '(' || cm.c_p_1_area_code || ') ' || cm.c_p_1_local || coalesce(cm.c_p_1_ext, '')\\n\\n\\t\\t\\twhen cm.c_p_1_area_code is null and cm.c_p_1_local is not null\\n\\t\\t\\tthen cm.c_p_1_local || coalesce(cm.c_p_1_ext, '')\\n\\n\\t\\t\\telse null\\n\\t\\t  end as phone1\\n\\t\\t, case\\n\\t\\t\\twhen cm.c_p_2_ctry_code is not null and cm.c_p_2_area_code is not null and cm.c_p_2_local is not null\\n\\t\\t\\tthen '+' || cm.c_p_2_ctry_code || ' (' || cm.c_p_2_area_code || ') ' || cm.c_p_2_local || coalesce(cm.c_p_2_ext, '')\\n\\n\\t\\t\\twhen cm.c_p_2_ctry_code is null and cm.c_p_2_area_code is not null and cm.c_p_2_local is not null\\n\\t\\t\\tthen '(' || cm.c_p_2_area_code || ') ' || cm.c_p_2_local || coalesce(cm.c_p_2_ext, '')\\n\\n\\t\\t\\twhen cm.c_p_2_area_code is null and cm.c_p_2_local is not null\\n\\t\\t\\tthen cm.c_p_2_local || coalesce(cm.c_p_2_ext, '')\\n\\n\\t\\t\\telse null\\n\\t\\t  end as phone2\\n\\t\\t, case\\n\\t\\t\\twhen cm.c_p_3_ctry_code is not null and cm.c_p_3_area_code is not null and cm.c_p_3_local is not null\\n\\t\\t\\tthen '+' || cm.c_p_3_ctry_code || ' (' || cm.c_p_3_area_code || ') ' || cm.c_p_3_local || coalesce(cm.c_p_3_ext, '')\\n\\n\\t\\t\\twhen cm.c_p_3_ctry_code is null and cm.c_p_3_area_code is not null and cm.c_p_3_local is not null\\n\\t\\t\\tthen '(' || cm.c_p_3_area_code || ') ' || cm.c_p_3_local || coalesce(cm.c_p_3_ext, '')\\n\\n\\t\\t\\twhen cm.c_p_3_area_code is null and cm.c_p_3_local is not null\\n\\t\\t\\tthen cm.c_p_3_local || coalesce(cm.c_p_3_ext, '')\\n\\n\\t\\t\\telse null\\n\\t\\t  end as phone3\\n\\t\\t, cm.c_prim_email\\n\\t\\t, cm.c_alt_email\\n\\t\\t, ntr.tx_name as nat_tx_name\\n\\t\\t, ntr.tx_rate as nat_tx_rate\\n\\t\\t, ltr.tx_name as lcl_tx_name\\n\\t\\t, ltr.tx_rate as lcl_tx_rate\\n\\t\\t, case\\n\\t\\t\\twhen cm.actionts::date = max(cm.actionts::date) over(partition by cm.c_id range between unbounded preceding and unbounded following)\\n\\t\\t\\tthen true\\n\\t\\t\\telse false\\n\\t\\t  end as iscurrent\\n\\t\\t, 1 as batchid\\n\\t\\t, cm.actionts::date as effectivedate\\n\\t\\t, '9999-12-31'::date as enddate\\n\\t\\t, cm.actiontype\\n\\t\\tfrom customermgmt cm\\n\\t\\tcross join batchdate bd\\n\\t\\tleft join taxrate ntr\\n\\t\\t\\ton cm.c_nat_tx_id = ntr.tx_id\\n\\t\\tleft join taxrate ltr\\n\\t\\t\\ton cm.c_lcl_tx_id = ltr.tx_id\\n\\t\\twhere cm.actiontype in ('NEW', 'UPDCUST', 'INACT')\\n\\t)\\n\\n\\t, c_new as (\\n\\t\\tselect\\n\\t\\t*\\n\\t\\tfrom customer\\n\\t\\twhere actiontype = 'NEW'\\n\\t)\\n\\n\\t, c_not_new as (\\n\\t\\tselect\\n\\t\\t  coalesce(c.sk, cn.sk) as sk\\n\\t\\t, coalesce(c.c_id, cn.c_id) as c_id\\n\\t\\t, coalesce(c.c_tax_id, cn.c_tax_id) as c_tax_id\\n\\t\\t, coalesce(c.status, cn.status) as status\\n\\t\\t, coalesce(c.c_l_name, cn.c_l_name) as c_l_name\\n\\t\\t, coalesce(c.c_f_name, cn.c_f_name) as c_f_name\\n\\t\\t, coalesce(c.c_m_name, cn.c_m_name) as c_m_name\\n\\t\\t, coalesce(c.gender, cn.gender) as gender\\n\\t\\t, coalesce(c.c_tier, cn.c_tier) as c_tier\\n\\t\\t, coalesce(c.c_dob, cn.c_dob) as c_dob\\n\\t\\t, coalesce(c.c_adline1, cn.c_adline1) as c_adline1\\n\\t\\t, coalesce(c.c_adline2, cn.c_adline2) as c_adline2\\n\\t\\t, coalesce(c.c_zipcode, cn.c_zipcode) as c_zipcode\\n\\t\\t, coalesce(c.c_city, cn.c_city) as c_city\\n\\t\\t, coalesce(c.c_state_prov, cn.c_state_prov) as c_state_prov\\n\\t\\t, coalesce(c.c_ctry, cn.c_ctry) as c_ctry\\n\\t\\t, coalesce(c.phone1, cn.phone1) as phone1\\n\\t\\t, coalesce(c.phone2, cn.phone2) as phone2\\n\\t\\t, coalesce(c.phone3, cn.phone3) as phone3\\n\\t\\t, coalesce(c.c_prim_email, cn.c_prim_email) as c_prim_email\\n\\t\\t, coales\"... "
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:32.657683+00:00",
      "state": "success",
      "task_display_name": "load_dimcustomer",
      "task_id": "load_dimcustomer",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.126677,
      "end_date": "2024-12-23T20:10:34.979351+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13250,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 16,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:34.106187+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "insert into dimessages\n\tselect\n\t  now()\n\t, 1\n\t, 'DimCustomer'\n\t, 'Invalid customer tier'\n\t, 'Alert'\n\t, 'C_ID = ' || customerid || ', C_TIER = ' || tier\n\tfrom dimcustomer\n\twhere tier not between 1 and 3;\n\ninsert into dimessages\n\tselect\n\t  now()\n\t, 1\n\t, 'DimCustomer'\n\t, 'DOB out of range'\n\t, 'Alert'\n\t, 'C_ID = ' || customerid || ', C_DOB = ' || dob\n\tfrom dimcustomer\n\twhere dob < (select * from batchdate) - interval '100 years'\n\tor dob > (select * from batchdate);"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:34.852674+00:00",
      "state": "success",
      "task_display_name": "load_dimessages_dimcustomer",
      "task_id": "load_dimessages_dimcustomer",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.188139,
      "end_date": "2024-12-23T20:10:36.114347+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13256,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 15,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:35.165780+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "with current_active_customer as (\n\tselect p.*\n\tfrom prospect p\n\tinner join dimcustomer c\n\ton upper(c.lastname) = upper(p.lastname)\n\tand upper(c.firstname) = upper(p.firstname)\n\tand upper(c.addressline1) = upper(p.addressline1)\n\tand upper(c.addressline2) = upper(p.addressline2)\n\tand upper(c.postalcode) = upper(p.postalcode)\n\twhere c.status = 'ACTIVE'\n\tand c.iscurrent = true\n)\n\nupdate prospect\n\tset iscustomer = true \n\twhere lastname in (select lastname from current_active_customer)\n\tand firstname in (select firstname from current_active_customer)\n\tand addressline1 in (select addressline1 from current_active_customer)\n\tand addressline2 in (select addressline2 from current_active_customer)\n\tand postalcode in (select postalcode from current_active_customer);"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:35.926208+00:00",
      "state": "success",
      "task_display_name": "update_prospect",
      "task_id": "update_prospect",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.309793,
      "end_date": "2024-12-23T20:10:37.368212+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13275,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 14,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:36.283278+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table dimaccount;\ninsert into dimaccount\n\twith account as (\n\t\tselect\n\t\t  row_number() over(order by cm.ca_id) as sk\n\t\t, cm.ca_id\n\t\t, b.sk_brokerid\n\t\t, c.sk_customerid\n\t\t, case\n\t\t\twhen cm.actiontype in ('NEW', 'ADDACCT', 'UPDACCT', 'UPDCUST')\n\t\t\tthen 'ACTIVE'\n\t\t\telse 'INACTIVE'\n\t\t  end as status\n\t\t, cm.ca_name\n\t\t, cm.ca_tax_st\n\t\t, case\n\t\t\twhen cm.actionts::date = max(cm.actionts::date) over(partition by cm.ca_id range between unbounded preceding and unbounded following)\n\t\t\tthen true\n\t\t\telse false\n\t\t  end as iscurrent\n\t\t, 1 as batchid\n\t\t, cm.actionts::date as effectivedate\n\t\t, '9999-12-31'::date as enddate\n\t\t, cm.actiontype\n\t\tfrom customermgmt cm\n\t\tcross join batchdate bd\n\t\tleft join dimbroker b\n\t\t\ton cm.ca_b_id = b.brokerid\n\t\tleft join dimcustomer c\n\t\t\ton cm.c_id = c.customerid\n\t\t\tand cm.actionts::date >= c.effectivedate\n\t\t\tand cm.actionts::date <= c.enddate\n\t\twhere cm.actiontype in ('NEW', 'ADDACCT', 'UPDACCT', 'CLOSEACCT', 'UPDCUST', 'INACT')\n\t)\n\t\n\t, ca_new as (\n\t\t\tselect\n\t\t\t*\n\t\t\tfrom account\n\t\t\twhere actiontype = 'NEW'\n\t)\n\t\n\t, ca_not_new as (\n\t\tselect\n\t\t  coalesce(a.sk, cn.sk) as sk\n\t\t, coalesce(a.ca_id, cn.ca_id) as ca_id\n\t\t, coalesce(a.sk_brokerid, cn.sk_brokerid) as sk_brokerid\n\t\t, coalesce(a.sk_customerid, cn.sk_customerid) as sk_customerid\n\t\t, coalesce(a.status, cn.status) as status\n\t\t, coalesce(a.ca_name, cn.ca_name) as ca_name\n\t\t, coalesce(a.ca_tax_st, cn.ca_tax_st) as ca_tax_st\n\t\t, coalesce(a.iscurrent, cn.iscurrent) as iscurrent\n\t\t, coalesce(a.batchid, cn.batchid) as batchid\n\t\t, coalesce(a.effectivedate, cn.effectivedate) as effectivedate\n\t\t, coalesce(a.enddate, cn.enddate) as enddate\n\t\t, a.actiontype\n\t\tfrom account a\n\t\tinner join ca_new cn\n\t\t\ton a.ca_id = cn.ca_id\n\t\twhere a.actiontype != 'NEW'\n\t)\n\t\n\t, ca_all as (\n\t\tselect * from ca_new\n\t\tunion all\n\t\tselect * from ca_not_new\n\t)\n\n\tselect \n\t  sk\n\t, ca_id\n\t, sk_brokerid\n\t, sk_customerid\n\t, status\n\t, ca_name\n\t, ca_tax_st\n\t, iscurrent\n\t, batchid\n\t, effectivedate\n\t, enddate\n\tfrom ca_all"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:37.058419+00:00",
      "state": "success",
      "task_display_name": "load_dimaccount",
      "task_id": "load_dimaccount",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 2.848768,
      "end_date": "2024-12-23T20:10:42.010775+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13283,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 13,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:38.387639+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table cashtransaction;\n\nDO $$ \nDECLARE\n    base_path TEXT;\nBEGIN\n    -- Retrieve the base path from the config table\n    SELECT value_text INTO base_path\n    FROM config\n    WHERE key_name = 'base_path';\n\n    -- Use dynamic SQL to execute the COPY command with the file path\n    EXECUTE format('COPY cashtransaction FROM %L DELIMITER ''|'';', base_path || '/data/Batch1/CashTransaction.txt');\n\nEND $$;\n\ntruncate table factcashbalances;\ninsert into factcashbalances\n\twith grouped as (\n\t\tselect \n\t\ta.sk_customerid as sk_customerid,\n\t\ta.sk_accountid as sk_accountid,\n\t\td.sk_dateid as sk_dateid,\n\t\tsum(ct_amt) as ct_amt_day\n\t\tfrom cashtransaction ct, dimaccount a, dimdate d\n\t\twhere ct.ct_ca_id = a.accountid\n\t\tand ct_dts::date >= a.effectivedate and ct_dts::date < a.enddate\n\t\tand ct_dts::date = d.datevalue\n\t\tgroup by a.sk_customerid, a.sk_accountid, d.sk_dateid\n\t)\n    select\n    sk_customerid,\n    sk_accountid,\n    sk_dateid,\n    sum(ct_amt_day) over(partition by sk_accountid order by sk_dateid rows between unbounded preceding and current row) as cash,\n    1 as batchid\n    from grouped;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:39.162007+00:00",
      "state": "success",
      "task_display_name": "load_CashBalances",
      "task_id": "load_CashBalances",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 1.268793,
      "end_date": "2024-12-23T20:10:44.888175+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13291,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 12,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:42.867782+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table finwire_sec;\n\nDO $$\nDECLARE\n    base_path TEXT;\nBEGIN\n    -- Retrieve the base path from the config table\n    SELECT value_text INTO base_path\n    FROM config\n    WHERE key_name = 'base_path';\n\n    -- Use dynamic SQL to execute the COPY command with the file path\n    EXECUTE format('COPY finwire_sec FROM %L DELIMITER '','' CSV;', base_path || '/finwire_sec.csv');\n\nEND $$;\n\n\n\ntruncate table dimsecurity;\ninsert into dimsecurity\n\tSELECT\n\t\trow_number() over(ORDER BY symbol, fin_sec.pts) as sk_securityid,\n        symbol,\n        issuetype       AS issue,\n        st.st_name      AS status,\n        fin_sec.name,\n        exid            AS exchangeid,\n        c.sk_companyid  AS sk_companyid,\n\n        shout::numeric(12,0)           AS sharesoutstanding,\n        LEFT(firsttradedate, 8)::date   AS firsttrade,\n        LEFT(firsttradeexchg, 8)::date  AS firsttradeonexchange,\n        dividend::numeric(10,2)         AS dividend,\n\n        CASE\n            WHEN ROW_NUMBER() OVER (PARTITION BY symbol ORDER BY fin_sec.pts DESC) = 1\n            THEN TRUE\n            ELSE FALSE\n        END AS iscurrent,\n        1 AS batchid,\n        LEFT(fin_sec.pts, 8)::date AS effectivedate,\n        '9999-12-31'::date         AS enddate\n\n    FROM finwire_sec fin_sec\n    JOIN statustype st\n        ON fin_sec.status = st.st_id\n    JOIN dimcompany c\n        ON (\n            (fin_sec.conameorcik ~ '^[0-9]+$' AND c.companyid = fin_sec.conameorcik::numeric)\n            OR\n            (fin_sec.conameorcik !~ '^[0-9]+$' AND c.name = fin_sec.conameorcik)\n        )\n        AND LEFT(fin_sec.pts,8)::date >= c.effectivedate\n        AND LEFT(fin_sec.pts,8)::date < c.enddate\n    ORDER BY symbol, fin_sec.pts;\n"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:43.619382+00:00",
      "state": "success",
      "task_display_name": "load_dimSecurity",
      "task_id": "load_dimSecurity",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.683371,
      "end_date": "2024-12-23T20:10:46.499859+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13298,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 11,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:45.058441+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "COPY tradehistory FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/TradeHistory.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:45.816488+00:00",
      "state": "success",
      "task_display_name": "load_trade_history",
      "task_id": "load_trade_history",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 1.028708,
      "end_date": "2024-12-23T20:10:48.473821+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13302,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 10,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:46.663402+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "COPY trade FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/Trade.txt' delimiter '|' null as '';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:47.445113+00:00",
      "state": "success",
      "task_display_name": "load_trade",
      "task_id": "load_trade",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 10.174366,
      "end_date": "2024-12-23T20:11:48.036034+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13358,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 4,
      "queue": "default",
      "queued_when": "2024-12-23T20:11:37.087220+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "create index if not exists idx_tradehistory_t_id_dts on tradehistory(th_t_id, th_dts);\ncreate index if not exists idx_trade_composite ON trade(t_id, t_ca_id, t_s_symb);\nTRUNCATE TABLE dimtrade;\n\nINSERT INTO dimtrade (\n    tradeid,\n    sk_brokerid,\n    sk_createdateid,\n    sk_createtimeid,\n    sk_closedateid,\n    sk_closetimeid,\n    status,\n    type,\n    cashflag,\n    sk_securityid,\n    sk_companyid,\n    quantity,\n    bidprice,\n    sk_customerid,\n    sk_accountid,\n    executedby,\n    tradeprice,\n    fee,\n    commission,\n    tax,\n    batchid\n)\nWITH first_trade_history AS (\n    -- Get the first occurrence of each trade to establish create dates\n    SELECT \n        t_id,\n        th_dts,\n        th_st_id,\n        t_tt_id,\n        ROW_NUMBER() OVER (PARTITION BY t_id ORDER BY th_dts) as rn\n    FROM \n        trade t\n        JOIN tradehistory th ON t.t_id = th.th_t_id\n),\nlast_trade_history AS (\n    -- Get the last occurrence of each trade to establish close dates\n    SELECT \n        t_id,\n        th_dts,\n        th_st_id,\n        ROW_NUMBER() OVER (PARTITION BY t_id ORDER BY th_dts DESC) as rn\n    FROM \n        trade t\n        JOIN tradehistory th ON t.t_id = th.th_t_id\n),\ntrade_dates AS (\n    -- Calculate create and close dates based on requirements\n    SELECT \n        t.t_id,\n        -- Create dates based on first occurrence meeting conditions\n        CASE\n            WHEN (fth.th_st_id = 'SBMT' AND fth.t_tt_id IN ('TMB', 'TMS')) \n              OR fth.th_st_id = 'PNDG'\n            THEN TO_CHAR(DATE_TRUNC('second', fth.th_dts)::date, 'YYYYMMDD')::numeric\n        END as sk_createdateid,\n        CASE\n            WHEN (fth.th_st_id = 'SBMT' AND fth.t_tt_id IN ('TMB', 'TMS')) \n              OR fth.th_st_id = 'PNDG'\n            THEN TO_CHAR(DATE_TRUNC('second', fth.th_dts)::time, 'HH24MISS')::numeric\n        END as sk_createtimeid,\n        -- Close dates based on last occurrence meeting conditions\n        CASE\n            WHEN lth.th_st_id IN ('CMPT', 'CNCL')\n            THEN TO_CHAR(DATE_TRUNC('second', lth.th_dts)::date, 'YYYYMMDD')::numeric\n        END as sk_closedateid,\n        CASE\n            WHEN lth.th_st_id IN ('CMPT', 'CNCL')\n            THEN TO_CHAR(DATE_TRUNC('second', lth.th_dts)::time, 'HH24MISS')::numeric\n        END as sk_closetimeid,\n        fth.th_dts as first_trade_dts\n    FROM \n        trade t\n        JOIN first_trade_history fth ON t.t_id = fth.t_id AND fth.rn = 1\n        JOIN last_trade_history lth ON t.t_id = lth.t_id AND lth.rn = 1\n)\nSELECT \n    t.t_id as tradeid,\n    a.sk_brokerid,\n    td.sk_createdateid,\n    td.sk_createtimeid,\n    td.sk_closedateid,\n    td.sk_closetimeid,\n    st.st_name as status,\n    tt.tt_name as type,\n    t.t_is_cash::boolean as cashflag,\n    s.sk_securityid,\n    s.sk_companyid,\n    t.t_qty as quantity,\n    t.t_bid_price as bidprice,\n    a.sk_customerid,\n    a.sk_accountid,\n    t.t_exec_name as executedby,\n    t.t_trade_price as tradeprice,\n    t.t_chrg as fee,\n    t.t_comm as commission,\n    t.t_tax as tax,\n    1 as batchid\nFROM \n    trade t\n    JOIN trade_dates td ON t.t_id = td.t_id\n    -- Join with reference tables\n    JOIN statustype st ON t.t_st_id = st.st_id\n    JOIN tradetype tt ON t.t_tt_id = tt.tt_id\n    -- Join with DimSecurity using effective dating\n    JOIN dimsecurity s ON t.t_s_symb = s.symbol\n        AND td.first_trade_dts::date >= s.effectivedate\n        AND td.first_trade_dts::date < s.enddate\n    -- Join with DimAccount using effective dating\n    JOIN dimaccount a ON t.t_ca_id = a.accountid\n        AND td.first_trade_dts::date >= a.effectivedate\n        AND td.first_trade_dts::date < a.enddate;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:11:37.861668+00:00",
      "state": "success",
      "task_display_name": "load_dimtrade",
      "task_id": "load_dimtrade",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.171788,
      "end_date": "2024-12-23T20:11:49.876156+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13372,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 3,
      "queue": "default",
      "queued_when": "2024-12-23T20:11:48.932764+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "insert into dimessages\n\tselect\n\t  now()\n\t, 1\n\t, 'DimTrade'\n\t, 'Invalid trade commission'\n\t, 'Alert'\n\t, 'T_ID = ' || tradeid || ', T_COMM = ' || commission\n\tfrom dimtrade\n\twhere commission is not null\n\tand commission > (tradeprice * quantity);\n\t\ninsert into dimessages\n\tselect\n\t  now()\n\t, 1\n\t, 'DimTrade'\n\t, 'Invalid trade fee'\n\t, 'Alert'\n\t, 'T_ID = ' || tradeid || ', T_CHRG = ' || fee\n\tfrom dimtrade\n\twhere fee is not null\n\tand fee > (tradeprice * quantity);"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:11:49.704368+00:00",
      "state": "success",
      "task_display_name": "load_dimessages_dimtrade",
      "task_id": "load_dimessages_dimtrade",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 1.381594,
      "end_date": "2024-12-23T20:10:50.782491+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13306,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 9,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:48.644265+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "COPY dailymarket FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/DailyMarket.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:49.400897+00:00",
      "state": "success",
      "task_display_name": "load_dailymarket",
      "task_id": "load_dailymarket",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 36.46949,
      "end_date": "2024-12-23T20:11:28.223620+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13310,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 8,
      "queue": "default",
      "queued_when": "2024-12-23T20:10:50.978283+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table factmarkethistory;\ninsert into factmarkethistory\n\twith market_dates_daily as (\n\t\tselect \n\t\t  dm.dm_s_symb\n\t\t, dm.dm_date\n\t\t, dm.dm_close\n\t\t, dm.dm_high\n\t\t, dm.dm_low\n\t\t, dm.dm_vol\n\t\t, dd.sk_dateid\n\t\tfrom dailymarket dm\n\t\tinner join dimdate dd \n\t\t\ton dm.dm_date = dd.datevalue\n\t\torder by\n\t\t\t  dm.dm_s_symb\n\t\t\t, dm.dm_date desc\n\t)\n\n\t, high_low as (\n\t\tselect\n\t\t  dm_s_symb\n\t\t, dm_date\n\t\t, dm_close\n\t\t, dm_high\n\t\t, dm_low\n\t\t, dm_vol\n\t\t, max(dm_high) over(partition by dm_s_symb order by dm_date rows between 363 preceding and current row) as fiftytwoweekhigh\n\t\t, min(dm_low) over(partition by dm_s_symb order by dm_date rows between 363 preceding and current row) as fiftytwoweeklow\n\t\tfrom market_dates_daily\n\t)\n\n\t, high_date as (\n\t\tselect\n\t\t  hl.dm_s_symb\n\t\t, hl.dm_date\n\t\t, hl.dm_close\n\t\t, hl.dm_high\n\t\t, hl.dm_low\n\t\t, hl.dm_vol\n\t\t, hl.fiftytwoweekhigh\n\t\t, hl.fiftytwoweeklow\n\t\t, max(mdd.dm_date) as sk_fiftytwoweekhighdate\n\t\tfrom high_low hl\n\t\tinner join market_dates_daily mdd\n\t\t\ton hl.dm_s_symb = mdd.dm_s_symb\n\t\t\tand hl.fiftytwoweekhigh = mdd.dm_high\n\t\t\tand mdd.dm_date <= hl.dm_date\n\t\t\tand mdd.dm_date >= hl.dm_date - interval '52 weeks'\n\t\tgroup by\n\t\t\t  hl.dm_s_symb\n\t\t\t, hl.dm_date\n\t\t\t, hl.dm_close\n\t\t\t, hl.dm_high\n\t\t\t, hl.dm_low\n\t\t\t, hl.dm_vol\n\t\t\t, hl.fiftytwoweekhigh\n\t\t\t, hl.fiftytwoweeklow\n\t)\n\n\t, low_date as (\n\t\tselect\n\t\t  hl.dm_s_symb\n\t\t, hl.dm_date\n\t\t, hl.dm_close\n\t\t, hl.dm_high\n\t\t, hl.dm_low\n\t\t, hl.dm_vol\n\t\t, hl.fiftytwoweekhigh\n\t\t, hl.fiftytwoweeklow\n\t\t, hl.sk_fiftytwoweekhighdate\n\t\t, max(mdd.dm_date) as sk_fiftytwoweeklowdate\n\t\tfrom high_date hl\n\t\tinner join market_dates_daily mdd\n\t\t\ton hl.dm_s_symb = mdd.dm_s_symb\n\t\t\tand hl.fiftytwoweeklow = mdd.dm_low\n\t\t\tand mdd.dm_date <= hl.dm_date\n\t\t\tand mdd.dm_date >= hl.dm_date - interval '52 weeks'\n\t\tgroup by\n\t\t\t  hl.dm_s_symb\n\t\t\t, hl.dm_date\n\t\t\t, hl.dm_close\n\t\t\t, hl.dm_high\n\t\t\t, hl.dm_low\n\t\t\t, hl.dm_vol\n\t\t\t, hl.fiftytwoweekhigh\n\t\t\t, hl.fiftytwoweeklow\n\t\t\t, hl.sk_fiftytwoweekhighdate\n\t)\n\n\t, quarters as (\n\t\t\tselect\n\t\t\t  f.sk_companyid\n\t\t\t, f.fi_qtr_start_date\n\t\t\t, sum(fi_basic_eps) over (partition by c.companyid order by f.fi_qtr_start_date rows between 3 preceding and current row ) as eps_qtr_sum\n\t\t\t, lead(fi_qtr_start_date, 1, '9999-12-31'::date) over (partition by c.companyid order by f.fi_qtr_start_date asc) as next_qtr_start\n\t\t\tfrom financial f \n\t\t\tinner join dimcompany c\n\t\t\t\ton f.sk_companyid = c.sk_companyid\n\t)\n\n\t, final_output as (\n\t\tselect\n\t\t  s.sk_securityid\n\t\t, s.sk_companyid\n\t\t, to_char(ld.dm_date, 'yyyymmdd')::numeric as sk_dateid\n\t\t, case\n\t\t\twhen q.eps_qtr_sum != 0 and q.eps_qtr_sum is not null\n\t\t\tthen (ld.dm_close / q.eps_qtr_sum)::numeric(10, 2)\n\t\t\telse null\n\t\t  end as peratio\n\t\t, case\n\t\t\twhen ld.dm_close != 0\n\t\t\tthen round((s.dividend / ld.dm_close) * 100, 2)\n\t\t\telse null\n\t\t  end as yield\n\t\t, ld.fiftytwoweekhigh\n\t\t, to_char(ld.sk_fiftytwoweekhighdate, 'yyyymmdd')::numeric as sk_fiftytwoweekhighdate\n\t\t, ld.fiftytwoweeklow\n\t\t, to_char(ld.sk_fiftytwoweeklowdate, 'yyyymmdd')::numeric as sk_fiftytwoweeklowdate\n\t\t, ld.dm_close as closeprice\n\t\t, ld.dm_high as dayhigh\n\t\t, ld.dm_low as daylow\n\t\t, ld.dm_vol as volume\n\t\t, 1 as batchid\n\t\tfrom low_date ld \n\t\t\tinner join dimsecurity s \n\t\t\t\ton ld.dm_s_symb = s.symbol \n\t\t\t\tand ld.dm_date >= s.effectivedate \n\t\t\t\tand ld.dm_date < s.enddate\n\t\t\tinner join quarters q \n\t\t\t\ton s.sk_companyid = q.sk_companyid \n\t\t\t\tand q.fi_qtr_start_date <= ld.dm_date \n\t\t\t\tand q.next_qtr_start > ld.dm_date\n\t)\n\n\tselect * from final_output;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:10:51.754130+00:00",
      "state": "success",
      "task_display_name": "load_fact_market_history",
      "task_id": "load_fact_market_history",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.15398,
      "end_date": "2024-12-23T20:11:30.478307+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13331,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 7,
      "queue": "default",
      "queued_when": "2024-12-23T20:11:29.558744+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "insert into dimessages\n\tselect\n\t  now()\n\t, 1\n\t, 'FactMarketHistory'\n\t, 'No earnings for company'\n\t, 'Alert'\n\t, 'DM_S_SYMB = ' || s.symbol\n\tfrom factmarkethistory fmh\n\tinner join dimsecurity s\n\t\ton fmh.sk_securityid = s.sk_securityid\n\twhere fmh.peratio is null\n\tor fmh.peratio = 0;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:11:30.324327+00:00",
      "state": "success",
      "task_display_name": "load_dimessages_factmarkethistory",
      "task_id": "load_dimessages_factmarkethistory",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.837056,
      "end_date": "2024-12-23T20:11:32.885180+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13339,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 6,
      "queue": "default",
      "queued_when": "2024-12-23T20:11:31.298794+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "COPY watchhistory FROM '/Users/marwasulaiman/Documents/BDMA/DW/Project/tpcdi-citus/data/Batch1/WatchHistory.txt' delimiter '|';"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:11:32.048124+00:00",
      "state": "success",
      "task_display_name": "load_watchhistory",
      "task_id": "load_watchhistory",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 1.69641,
      "end_date": "2024-12-23T20:11:36.201814+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13345,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 5,
      "queue": "default",
      "queued_when": "2024-12-23T20:11:33.759020+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table factwatches;\ninsert into factwatches\n\twith watches as (\n\t\tselect w1.w_c_id, \n\t\tTRIM(w1.w_s_symb) as w_s_symb, \n\t\tw1.w_dts::date as dateplaced, \n\t\tw2.w_dts::date as dateremoved\n\t\tfrom watchhistory w1,\n\t\t\twatchhistory w2\n\t\twhere w1.w_c_id = w2.w_c_id\n\t\tand w1.w_s_symb = w2.w_s_symb\n\t\tand w1.w_action = 'ACTV'\n\t\tand w2.w_action = 'CNCL'\n\t) \n\n\tselect \n\t\tc.sk_customerid as sk_customerid,\n\t\ts.sk_securityid as sk_securityid,\n\t\tto_char(w.dateplaced, 'yyyymmdd')::numeric as sk_dateid_dateplaced,\n\t\tto_char(w.dateremoved, 'yyyymmdd')::numeric as sk_dateid_dateremoved,\n\t\t1 as batchid\n\tfrom watches w,\n\t\tdimcustomer c,\n\t\tdimsecurity s,\n\t\tdimdate d1,\n\t\tdimdate d2\n\twhere w.w_c_id = c.customerid\n\tand w.w_s_symb = s.symbol\n\tand w.dateplaced = d1.datevalue\n\tand w.dateremoved = d2.datevalue;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:11:34.505404+00:00",
      "state": "success",
      "task_display_name": "load_factwatches",
      "task_id": "load_factwatches",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 4.341699,
      "end_date": "2024-12-23T20:11:55.149803+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13387,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 2,
      "queue": "default",
      "queued_when": "2024-12-23T20:11:50.060058+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "truncate table holdinghistory;\n\nDO $$ \nDECLARE\n    base_path TEXT;\nBEGIN\n    -- Retrieve the base path from the config table\n    SELECT value_text INTO base_path\n    FROM config\n    WHERE key_name = 'base_path';\n\n    -- Use dynamic SQL to execute the COPY command with the file path\n    EXECUTE format('COPY holdinghistory FROM %L DELIMITER ''|'';', base_path || '/data/Batch1/holdinghistory.txt');\n\nEND $$;\n\ntruncate table factholdings;\ninsert into factholdings \n\tselect\n\thh.hh_h_t_id as tradeid,\n\thh.hh_t_id as currenttradeid,\n\tt.sk_customerid as sk_customerid,\n\tt.sk_accountid as sk_accountid,\n\tt.sk_securityid as sk_securityid,\n\tt.sk_companyid as sk_companyid,\n\tt.sk_closedateid as sk_dateid,\n\tt.sk_closetimeid as sk_timeid,\n\tt.tradeprice as currentprice,\n\thh.hh_after_qty as currentholding,\n\t1 as batchid\n\tfrom holdinghistory hh, dimtrade t\n\twhere hh.hh_t_id = t.tradeid;"
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:11:50.808104+00:00",
      "state": "success",
      "task_display_name": "load_holdings",
      "task_id": "load_holdings",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.160817,
      "end_date": "2024-12-23T20:09:18.766134+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13126,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 32,
      "queue": "default",
      "queued_when": "2024-12-23T20:09:17.879912+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "Truncated. You can change this behaviour in [core]max_templated_field_length. \"/* ++++++++++++++++++++++++++++++++++++++++++++++++++ *\\n * +                                                + *\\n * +        TPC-DI  Validation Query                + *\\n * +        Version 1.1.0                           + *\\n * +                                                + *\\n * ++++++++++++++++++++++++++++++++++++++++++++++++++ *\\n *                                                    *\\n *       ====== Portability Substitutions ======      *\\n *     ---        [FROM DUMMY_TABLE]    ------        *\\n * DB2            from sysibm.sysdummy1               *\\n * ORACLE         from dual                           *\\n * SQLSERVER       <blank>                            *\\n * -------------------------------------------------- *\\n *     ------  [||] (String concatenation) ------     *    \\n * SQLSERVER      +                                   *\\n * -------------------------------------------------- *\\n */\\n\\ninsert into DImessages\\n\\nselect\\n\\n     CURRENT_TIMESTAMP as MessageDateAndTime\\n     ,case when BatchID is null then 0 else BatchID end as BatchID\\n     ,MessageSource\\n     ,MessageText \\n     ,'Validation' as MessageType\\n     ,MessageData\\n\\nfrom (\\n     select max(BatchID) as BatchID from DImessages \\n) x join (\\n\\n    /* Basic row counts */\\n     select 'DimAccount' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimAccount\\n     union select 'DimBroker' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimBroker\\n     union select 'DimCompany' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimCompany\\n     union select 'DimCustomer' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimCustomer\\n     union select 'DimDate' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimDate\\n     union select 'DimSecurity' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimSecurity\\n     union select 'DimTime' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimTime\\n     union select 'DimTrade' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimTrade\\n     union select 'FactCashBalances' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactCashBalances\\n     union select 'FactHoldings' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactHoldings\\n     union select 'FactMarketHistory' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactMarketHistory\\n     union select 'FactWatches' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactWatches\\n     union select 'Financial' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Financial\\n     union select 'Industry' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Industry\\n     union select 'Prospect' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Prospect\\n     union select 'StatusType' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from StatusType\\n     union select 'TaxRate' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from TaxRate\\n     union select 'TradeType' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from TradeType\\n     /* Joined row counts for Fact tables */\\n     union select 'FactCashBalances' as MessageSource, 'Row count joined' as MessageText, \\n\\t\\t\\tcount(*) as MessageData \\n\\t\\t\\tfrom FactCashBalances f\\n\\t\\t\\tinner join DimAccount a on f.SK_AccountID = a.SK_AccountID\\n\\t\\t\\tinner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID\\n\\t\\t\\tinner join DimBroker b on a.SK_BrokerID = b.SK_BrokerID\\n\\t\\t\\tinner join DimDate d on f.SK_DateID = d.SK_DateID\\n     union select 'FactHoldings' as MessageSource, 'Row count joined' as MessageText, \\n\\t\\t\\tcount(*) as MessageData \\n\\t\\t\\tfrom FactHoldings f\\n\\t\\t\\tinner join DimAccount a on f.SK_AccountID = a.SK_AccountID\\n\\t\\t\\tinner join DimCustomer c on f.SK_CustomerID \"... "
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:09:18.605317+00:00",
      "state": "success",
      "task_display_name": "run_validation_query_Init",
      "task_id": "run_validation_query_Init",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    },
    {
      "dag_id": "TPCDI_Hist_Load",
      "dag_run_id": "manual__2024-12-23T20:09:11.298404+00:00",
      "duration": 0.87181,
      "end_date": "2024-12-23T20:11:56.953111+00:00",
      "execution_date": "2024-12-23T20:09:11.298404+00:00",
      "executor": null,
      "executor_config": "{}",
      "hostname": "marwas-macbook-pro.local",
      "map_index": -1,
      "max_tries": 0,
      "note": null,
      "operator": "PostgresOperator",
      "pid": 13393,
      "pool": "default_pool",
      "pool_slots": 1,
      "priority_weight": 1,
      "queue": "default",
      "queued_when": "2024-12-23T20:11:55.315352+00:00",
      "rendered_fields": {
        "conn_id": "citus_master_conn",
        "database": null,
        "hook_params": {},
        "parameters": null,
        "sql": "Truncated. You can change this behaviour in [core]max_templated_field_length. \"/* ++++++++++++++++++++++++++++++++++++++++++++++++++ *\\n * +                                                + *\\n * +        TPC-DI  Validation Query                + *\\n * +        Version 1.1.0                           + *\\n * +                                                + *\\n * ++++++++++++++++++++++++++++++++++++++++++++++++++ *\\n *                                                    *\\n *       ====== Portability Substitutions ======      *\\n *     ---        [FROM DUMMY_TABLE]    ------        *\\n * DB2            from sysibm.sysdummy1               *\\n * ORACLE         from dual                           *\\n * SQLSERVER       <blank>                            *\\n * -------------------------------------------------- *\\n *     ------  [||] (String concatenation) ------     *    \\n * SQLSERVER      +                                   *\\n * -------------------------------------------------- *\\n */\\n\\ninsert into DImessages\\n\\nselect\\n\\n     CURRENT_TIMESTAMP as MessageDateAndTime\\n     ,case when BatchID is null then 0 else BatchID end as BatchID\\n     ,MessageSource\\n     ,MessageText \\n     ,'Validation' as MessageType\\n     ,MessageData\\n\\nfrom (\\n     select max(BatchID) as BatchID from DImessages \\n) x join (\\n\\n    /* Basic row counts */\\n     select 'DimAccount' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimAccount\\n     union select 'DimBroker' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimBroker\\n     union select 'DimCompany' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimCompany\\n     union select 'DimCustomer' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimCustomer\\n     union select 'DimDate' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimDate\\n     union select 'DimSecurity' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimSecurity\\n     union select 'DimTime' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimTime\\n     union select 'DimTrade' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimTrade\\n     union select 'FactCashBalances' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactCashBalances\\n     union select 'FactHoldings' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactHoldings\\n     union select 'FactMarketHistory' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactMarketHistory\\n     union select 'FactWatches' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactWatches\\n     union select 'Financial' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Financial\\n     union select 'Industry' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Industry\\n     union select 'Prospect' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Prospect\\n     union select 'StatusType' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from StatusType\\n     union select 'TaxRate' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from TaxRate\\n     union select 'TradeType' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from TradeType\\n     /* Joined row counts for Fact tables */\\n     union select 'FactCashBalances' as MessageSource, 'Row count joined' as MessageText, \\n\\t\\t\\tcount(*) as MessageData \\n\\t\\t\\tfrom FactCashBalances f\\n\\t\\t\\tinner join DimAccount a on f.SK_AccountID = a.SK_AccountID\\n\\t\\t\\tinner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID\\n\\t\\t\\tinner join DimBroker b on a.SK_BrokerID = b.SK_BrokerID\\n\\t\\t\\tinner join DimDate d on f.SK_DateID = d.SK_DateID\\n     union select 'FactHoldings' as MessageSource, 'Row count joined' as MessageText, \\n\\t\\t\\tcount(*) as MessageData \\n\\t\\t\\tfrom FactHoldings f\\n\\t\\t\\tinner join DimAccount a on f.SK_AccountID = a.SK_AccountID\\n\\t\\t\\tinner join DimCustomer c on f.SK_CustomerID \"... "
      },
      "rendered_map_index": null,
      "sla_miss": null,
      "start_date": "2024-12-23T20:11:56.081301+00:00",
      "state": "success",
      "task_display_name": "run_validation_query_HistLoad",
      "task_id": "run_validation_query_HistLoad",
      "trigger": null,
      "triggerer_job": null,
      "try_number": 1,
      "unixname": "marwasulaiman"
    }
  ],
  "total_entries": 36
}
